on:
  pull_request:
    branches:
      - main
      - master
      - dev
      - release-*
  push:
    branches:
      - main
      - master
      - dev
      - release-*

# the name of our workflow
name: CI

jobs:
  lint:
    name: Lint
    strategy:
      matrix:
        targets:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.targets.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Rust
        run: |
          rustup toolchain install stable --profile minimal --no-self-update
          rustup default stable
          rustup component add clippy rustfmt
          rustc --version
          cargo --version
          rustup show

      - name: Tauri dependencies
        if: startsWith(matrix.targets.os, 'ubuntu-')
        run: >-
          sudo apt-get update &&
          sudo apt-get install -y
          libgtk-3-dev
          libayatana-appindicator3-dev
          libwebkit2gtk-4.1-dev
          librsvg2-dev
          libxdo-dev
          webkit2gtk-driver
          xvfb

      - uses: maxim-lobanov/setup-xcode@v1
        if: startsWith(matrix.targets.os, 'macos-')
        with:
          xcode-version: 'latest-stable'

      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - uses: actions/cache@v4
        name: Cache Rust dependencies
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Prepare fronend
        run: pnpm -r build # Build frontend
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
      # TODO: preapre the js script file
      - name: Prepare sidecar and resources
        run: pnpm check
      - name: Lint
        if: startsWith(matrix.targets.os, 'ubuntu-')
        run: pnpm lint # Lint
      #- name: Lint
      #  if: startsWith(matrix.targets.os, 'ubuntu-') == false
      #  run: pnpm run-p lint:clippy lint:rustfmt # Lint
      #  env:
      #    NODE_OPTIONS: '--max_old_space_size=4096'
  # TODO: support test cross-platform
  build:
    name: Build Tauri
    strategy:
      matrix:
        targets:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
      fail-fast: false
    #if: >
    #  github.event_name != 'pull_request' ||
    #  contains(github.event.pull_request.title, 'crate') ||
    #  github.event.pull_request.user.login != 'renovate[bot]'
    runs-on: ${{ matrix.targets.os }}
    needs: lint
    steps:
      - uses: actions/checkout@v5
      - name: Tauri dependencies
        if: startsWith(matrix.targets.os, 'ubuntu-')
        run: >-
          sudo apt-get update &&
          sudo apt-get install -y
          libgtk-3-dev
          libayatana-appindicator3-dev
          libwebkit2gtk-4.1-dev
          librsvg2-dev
          libxdo-dev
          webkit2gtk-driver
          xvfb
      - uses: maxim-lobanov/setup-xcode@v1
        if: startsWith(matrix.targets.os, 'macos-')
        with:
          xcode-version: 'latest-stable'

      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - uses: actions/cache@v4
        name: Cache Rust dependencies
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # todo: prepare the js script file
      - name: Prepare sidecar and resources
        run: pnpm check

      - name: Prepare frontend
        run: pnpm -r build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Build Backend
        run: cargo build --release --manifest-path backend/Cargo.toml
